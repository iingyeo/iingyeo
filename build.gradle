buildscript {
    ext {
        springBootVersion = '1.3.0.M1'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

plugins {
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'iingyeo'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("org.projectlombok:lombok:1.16.4")
    compile("commons-beanutils:commons-beanutils")
    compile("com.mangofactory:swagger-springmvc:1.0.2")
    compile("com.mysema.querydsl:querydsl-mongodb:3.6.4")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("cz.jirutka.spring:embedmongo-spring:1.3.1")
    testCompile("com.jayway.restassured:rest-assured:2.4.1")
}

querydsl {
    springDataMongo = true
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
